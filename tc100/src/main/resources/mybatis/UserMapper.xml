<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.java.dao.impl.UserDaoImpl">
	<resultMap id="BaseResultMap" type="com.java.entity.User">
		<id column="id" property="id" jdbcType="CHAR" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_pwd" property="userPwd" jdbcType="VARCHAR" />
		<result column="display_name" property="displayName" jdbcType="VARCHAR" />
		<result column="user_type" property="userType" jdbcType="CHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="mobile" property="mobile" jdbcType="CHAR" />
		<result column="login_error_count" property="loginErrorCount" jdbcType="INTEGER" />
		<result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
		<result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
		<result column="state" property="state" jdbcType="CHAR" />
		<result column="create_by" property="createBy" jdbcType="CHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_by" property="updateBy" jdbcType="CHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
	</resultMap>
	<sql id="Base_Column_List">
		id, user_name, user_pwd, display_name, user_type, email,
		mobile,
		login_error_count,
		login_ip, last_login_time, state, create_by,
		create_time, update_by,
		update_time
	</sql>
	<resultMap id="UserDtoResultMap" type="com.java.dto.UserDto">
		<id column="id" property="id" jdbcType="CHAR" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_pwd" property="userPwd" jdbcType="VARCHAR" />
		<result column="display_name" property="displayName" jdbcType="VARCHAR" />
		<result column="user_type" property="userType" jdbcType="CHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="mobile" property="mobile" jdbcType="CHAR" />
		<result column="login_error_count" property="loginErrorCount" jdbcType="INTEGER" />
		<result column="login_ip" property="loginIp" jdbcType="VARCHAR" />
		<result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
		<result column="state" property="state" jdbcType="CHAR" />
		<result column="create_by" property="createBy" jdbcType="CHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_by" property="updateBy" jdbcType="CHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="favCount" property="favCount" jdbcType="INTEGER" />
	</resultMap>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
		select
		<include refid="Base_Column_List" />
		from tc_user
		where id = #{id,jdbcType=CHAR}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from
		tc_user
		where id = #{id,jdbcType=CHAR}
	</delete>
	<insert id="insert" parameterType="com.java.entity.User">
		insert into tc_user (id,
		user_name, user_pwd,
		display_name, user_type, email,
		mobile,
		login_error_count, login_ip,
		last_login_time, state, create_by,
		create_time, update_by, update_time
		)
		values (#{id,jdbcType=CHAR},
		#{userName,jdbcType=VARCHAR},
		#{userPwd,jdbcType=VARCHAR},
		#{displayName,jdbcType=VARCHAR}, #{userType,jdbcType=CHAR},
		#{email,jdbcType=VARCHAR},
		#{mobile,jdbcType=CHAR},
		#{loginErrorCount,jdbcType=INTEGER},
		#{loginIp,jdbcType=VARCHAR},
		#{lastLoginTime,jdbcType=TIMESTAMP}, #{state,jdbcType=CHAR},
		#{createBy,jdbcType=CHAR},
		#{createTime,jdbcType=TIMESTAMP},
		#{updateBy,jdbcType=CHAR},
		#{updateTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.java.entity.User">
		insert into tc_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="userPwd != null">
				user_pwd,
			</if>
			<if test="displayName != null">
				display_name,
			</if>
			<if test="userType != null">
				user_type,
			</if>
			<if test="email != null">
				email,
			</if>
			<if test="mobile != null">
				mobile,
			</if>
			<if test="loginErrorCount != null">
				login_error_count,
			</if>
			<if test="loginIp != null">
				login_ip,
			</if>
			<if test="lastLoginTime != null">
				last_login_time,
			</if>
			<if test="state != null">
				state,
			</if>
			<if test="createBy != null">
				create_by,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateBy != null">
				update_by,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=CHAR},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="userPwd != null">
				#{userPwd,jdbcType=VARCHAR},
			</if>
			<if test="displayName != null">
				#{displayName,jdbcType=VARCHAR},
			</if>
			<if test="userType != null">
				#{userType,jdbcType=CHAR},
			</if>
			<if test="email != null">
				#{email,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				#{mobile,jdbcType=CHAR},
			</if>
			<if test="loginErrorCount != null">
				#{loginErrorCount,jdbcType=INTEGER},
			</if>
			<if test="loginIp != null">
				#{loginIp,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginTime != null">
				#{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				#{state,jdbcType=CHAR},
			</if>
			<if test="createBy != null">
				#{createBy,jdbcType=CHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				#{updateBy,jdbcType=CHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.java.entity.User">
		update tc_user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userPwd != null">
				user_pwd = #{userPwd,jdbcType=VARCHAR},
			</if>
			<if test="displayName != null">
				display_name = #{displayName,jdbcType=VARCHAR},
			</if>
			<if test="userType != null">
				user_type = #{userType,jdbcType=CHAR},
			</if>
			<if test="email != null">
				email = #{email,jdbcType=VARCHAR},
			</if>
			<if test="mobile != null">
				mobile = #{mobile,jdbcType=CHAR},
			</if>
			<if test="loginErrorCount != null">
				login_error_count = #{loginErrorCount,jdbcType=INTEGER},
			</if>
			<if test="loginIp != null">
				login_ip = #{loginIp,jdbcType=VARCHAR},
			</if>
			<if test="lastLoginTime != null">
				last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
			</if>
			<if test="state != null">
				state = #{state,jdbcType=CHAR},
			</if>
			<if test="createBy != null">
				create_by = #{createBy,jdbcType=CHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateBy != null">
				update_by = #{updateBy,jdbcType=CHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
		</set>
		where id = #{id,jdbcType=CHAR}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.java.entity.User">
		update tc_user
		set
		user_name = #{userName,jdbcType=VARCHAR},
		user_pwd =
		#{userPwd,jdbcType=VARCHAR},
		display_name =
		#{displayName,jdbcType=VARCHAR},
		user_type = #{userType,jdbcType=CHAR},
		email = #{email,jdbcType=VARCHAR},
		mobile = #{mobile,jdbcType=CHAR},
		login_error_count = #{loginErrorCount,jdbcType=INTEGER},
		login_ip =
		#{loginIp,jdbcType=VARCHAR},
		last_login_time =
		#{lastLoginTime,jdbcType=TIMESTAMP},
		state = #{state,jdbcType=CHAR},
		create_by =
		#{createBy,jdbcType=CHAR},
		create_time =
		#{createTime,jdbcType=TIMESTAMP},
		update_by =
		#{updateBy,jdbcType=CHAR},
		update_time =
		#{updateTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=CHAR}
	</update>
	<select id="checkLogin" parameterType="java.lang.String" resultMap="BaseResultMap">
		select * from tc_user where user_name = #{userName}
	</select>
	<select id="getUserList" resultMap="UserDtoResultMap" parameterType="com.java.entity.User">
		SELECT u.*, COUNT(f.`id`) favCount FROM `tc_user` u
		LEFT JOIN `tc_user_fav` f ON u.`id` = f.`user_id`
		<where>
			<if test="userName!=null and userName!=''">
				user_name LIKE "%"#{userName}"%"
			</if>
		</where>
		GROUP BY u.`id`
	</select>
	<select id="getUserRoleName" parameterType="java.lang.String" resultType="java.lang.String">
		SELECT GROUP_CONCAT(role.role_name) roleName FROM
		tc_user_role userRole
		LEFT JOIN tc_role role ON userRole.role_id =
		role.id
		WHERE userRole.user_id = #{userId};
	</select>

	<select id="checkRegister" parameterType="com.java.entity.User" resultType="Integer">
		SELECT COUNT(0) FROM `tc_user` WHERE user_type = '1' AND state != '0'
		AND (user_name = #{userName} OR email = #{userName} OR mobile = #{userName})
	</select>

	<select id="getUserIdByMobile" parameterType="java.lang.String" resultType="java.lang.String">
		select id from tc_user where mobile = #{mobile}
	</select>

</mapper>